{"version":3,"sources":["components/presentational.tsx","components/checkbox.tsx","components/Table.tsx","components/DataTable.tsx","App.tsx","index.tsx"],"names":["AppContainer","styled","div","ContentBox","PaddingBox","Styles","IndeterminateCheckbox","React","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","type","headerProps","props","column","getStyles","cellProps","cell","numeric","align","style","justifyContent","alignItems","display","Table","columns","data","onRowClick","onSelectionChange","paginator","defaultColumn","useMemo","minWidth","width","maxWidth","useTable","useResizeColumns","useFlexLayout","useRowSelect","hooks","allColumns","push","id","disableResizing","Header","getToggleAllRowsSelectedProps","onClick","e","stopPropagation","Cell","row","getToggleRowSelectedProps","useInstanceBeforeDimensions","headerGroups","headers","canResize","getTableProps","rows","prepareRow","selectedRowIds","state","Object","keys","useState","initialLoad","setInitialLoad","el","document","querySelector","scrollTo","className","map","headerGroup","getHeaderGroupProps","getHeaderProps","render","getResizerProps","isResizing","getRowProps","preventDefault","rowData","values","rowIndex","index","cells","getCellProps","onEnter","console","log","page","setPage","onLeave","bottomOffset","DataTable","App","accessor","alt","title","src","thumbnailUrl","height","href","url","setRows","fetch","then","response","json","selection","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e5f21e69.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background: #fafafa;\n`;\n\nexport const ContentBox = styled.div`\n  width: 100%;\n  margin: 20px 40px;\n`;\n\nexport const PaddingBox = styled.div`\n  padding: 40px;\n`\n\nexport const Styles = styled.div`\n  padding: 1rem;\n  display: block;\n  overflow: auto;\n\n  .table {\n    border-spacing: 0;\n    background: white;\n    border: 1px solid #f2f2f2;\n    box-shadow: 0 10px 20px rgba(133, 143, 175, 0.1);\n    border-radius: 4px;\n\n    .thead {\n      overflow-y: auto;\n      overflow-x: hidden;\n    }\n\n    .tbody {\n      overflow-y: scroll;\n      overflow-x: hidden;\n      height: 500px;\n    }\n\n    .tr {\n      :last-child {\n        .td {\n          border-bottom: 0;\n        }\n      }\n      border-bottom: 1px solid #f2f2f2;\n    }\n\n    .th,\n    .td {\n      margin: 0;\n      padding: 0.5rem;\n      // border-right: 1px solid #f2f2f2;\n\n      position: relative;\n\n      :last-child {\n        border-right: 0;\n      }\n\n      .resizer {\n        right: 14px !important;\n        background: #f2f2f2;\n        width: 1px;\n        height: 100%;\n        position: absolute;\n        top: 0;\n        z-index: 1;\n        touch-action: none;\n        &.isResizing {\n          background: red;\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nexport const IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }: any, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef: any = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  useFlexLayout,\n  useResizeColumns,\n  useRowSelect,\n  useTable\n} from \"react-table\";\nimport { Waypoint } from \"react-waypoint\";\nimport { IndeterminateCheckbox } from \"./checkbox\";\nimport { PaddingBox } from './presentational';\n\n// ===================================\n// Setup for \"numeric\" data alignment\n// ===================================\n\n// setting it up so only values change direction, not headings\n\nconst headerProps = (props: any, { column }: any) =>\n  getStyles(props, null);\n\nconst cellProps = (props: any, { cell }: any) =>\n  getStyles(props, cell.column.numeric);\n\nconst getStyles = (props: any, align: any = false) => [\n  props,\n  {\n    style: {\n      justifyContent: align ? \"flex-end\" : \"flex-start\",\n      alignItems: \"flex-start\",\n      display: \"flex\"\n    }\n  }\n];\n\nexport function Table({\n  columns,\n  data,\n  onRowClick,\n  onSelectionChange,\n  paginator\n}: any) {\n  // ===================================\n  // Setup for column sizing defaults\n  // ===================================\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      minWidth: 50,\n      width: 150,\n      maxWidth: 300\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: { selectedRowIds }\n  }: any = useTable(\n    {\n      columns,\n      data,\n      defaultColumn\n    } as any,\n    useResizeColumns,\n    useFlexLayout,\n    useRowSelect,\n    hooks => {\n      hooks.allColumns.push(columns => [\n        {\n          id: \"selection\",\n          disableResizing: true,\n          minWidth: 50,\n          width: 50,\n          maxWidth: 50,\n          Header: ({ getToggleAllRowsSelectedProps }: any) => (\n            <div onClick={e => e.stopPropagation()}>\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n            </div>\n          ),\n          Cell: ({ row }: any) => (\n            <div onClick={e => e.stopPropagation()}>\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n            </div>\n          )\n        },\n        ...columns\n      ]);\n      hooks.useInstanceBeforeDimensions.push(({ headerGroups }: any) => {\n        const selectionGroupHeader = headerGroups[0].headers[0];\n        selectionGroupHeader.canResize = false;\n      });\n    }\n  ) as any;\n\n  // ===================================\n  // Setup for checkbox handler\n  // ===================================\n\n  useEffect(() => {\n    onSelectionChange(Object.keys(selectedRowIds));\n  }, [selectedRowIds, onSelectionChange]);\n\n  // ===================================\n  // Setup for infinite scroll\n  // ===================================\n\n  const [initialLoad, setInitialLoad] = useState(true);\n\n  const InfiniteScrollLoadDataFunction = () => {\n    console.log(`calling InfiniteScrollLoadDataFunction`, paginator);\n\n    // stop run on initial render\n    if (initialLoad) {\n      setInitialLoad(false);\n      return;\n    }\n\n    const { page, setPage } = paginator;\n\n    setPage(page + 1);\n  };\n  const InfiniteScrollLoadDataEnd = () => {\n    // note: could show/hide the loading indicator with this but it'll be buried in items anyway\n    // note: could setup custom loader using this\n    console.log(`calling InfiniteScrollLoadDataEnd`);\n  };\n\n  // ===================================\n  // Resetting scroll position on reload\n  // ===================================\n\n  useEffect(() => {\n    let el = document.querySelector(\".tbody\");\n    el && el.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      <div {...getTableProps()} className=\"table\">\n        <div>\n          {headerGroups.map((headerGroup: any) => (\n            <div {...headerGroup.getHeaderGroupProps({})} className=\"tr\">\n              {headerGroup.headers.map((column: any) => (\n                <div {...column.getHeaderProps(headerProps)} className=\"th\">\n                  {column.render(\"Header\")}\n                  {column.canResize && (\n                    <div\n                      {...column.getResizerProps()}\n                      className={`resizer ${\n                        column.isResizing ? \"isResizing\" : \"\"\n                      }`}\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"tbody\">\n          {rows.map((row: any) => {\n            prepareRow(row);\n            return (\n              <div\n                {...row.getRowProps()}\n                className=\"tr\"\n                onClick={(e: React.MouseEvent) => {\n                  e.preventDefault();\n                  onRowClick({ rowData: row.values, rowIndex: row.index });\n                }}\n              >\n                {row.cells.map((cell: any) => {\n                  return (\n                    <div {...cell.getCellProps(cellProps)} className=\"td\">\n                      {cell.render(\"Cell\")}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n          <Waypoint\n            onEnter={InfiniteScrollLoadDataFunction}\n            onLeave={InfiniteScrollLoadDataEnd}\n            bottomOffset=\"-50px\"\n          >\n            <PaddingBox>Loading...</PaddingBox>\n          </Waypoint>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Styles } from \"./presentational\";\nimport { Table } from './Table';\n\n\nfunction DataTable({\n  rows,\n  columns,\n  onRowClick,\n  onSelectionChange,\n  paginator\n}: any) {\n  return (\n    <Styles>\n      <Table\n        columns={columns}\n        data={rows}\n        onRowClick={onRowClick}\n        onSelectionChange={onSelectionChange}\n        paginator={paginator}\n      />\n    </Styles>\n  );\n}\n\nexport default DataTable;\n","import React, { useEffect, useState } from \"react\";\nimport DataTable from \"./components/DataTable\";\nimport { AppContainer, ContentBox } from \"./components/presentational\";\n\nexport interface APIPhoto {\n  albumId: number;\n  id: number;\n  title: string;\n  url: string;\n  thumbnailUrl: string;\n}\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Thumbnail\",\n        accessor: \"thumbnailUrl\",\n        Cell: ({ row }: any) => (\n          <img\n            alt={row.values.title}\n            src={row.values.thumbnailUrl}\n            height=\"60px\"\n          />\n        ),\n        width: 50\n      },\n      {\n        Header: \"Title\",\n        accessor: \"title\",\n        Cell: ({ row }: any) => <a href={row.values.url}>{row.values.title}</a>\n      },\n      {\n        Header: \"Url\",\n        accessor: \"url\"\n      },\n      {\n        Header: \"Album ID\",\n        accessor: \"albumId\",\n        numeric: false\n      },\n      {\n        Header: \"ID\",\n        accessor: \"id\",\n        numeric: true\n      }\n    ],\n    []\n  );\n\n  const onRowClick = ({ rowData, rowIndex }: any) => {\n    console.log({ rowData, rowIndex });\n  };\n\n  const onSelectionChange = (selection: string[]) => {\n    console.log({ selection });\n  };\n\n  // ==============================\n  // Paginated data fetching\n  // ==============================\n\n  const [page, setPage] = useState(0);\n  const pagLimit = 30;\n\n  const [rows, setRows] = useState<APIPhoto[]>([]);\n\n  useEffect(() => {\n    fetch(\n      `https://jsonplaceholder.typicode.com/photos?_start=${page *\n        pagLimit}&_limit=${pagLimit}`\n    )\n      .then(response => response.json())\n      .then((json: APIPhoto[]) => {\n        console.log(json);\n        setRows(rows => [...rows, ...json]);\n      });\n  }, [page]);\n\n  return (\n    <AppContainer>\n      <ContentBox>\n        <h1>DataTable Component: </h1>\n        <DataTable\n          columns={columns}\n          rows={rows}\n          onRowClick={onRowClick}\n          onSelectionChange={onSelectionChange}\n          paginator={{ page, setPage }}\n        />\n      </ContentBox>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './globalStyles.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}