{"version":3,"sources":["components/presentational.tsx","components/checkbox.tsx","components/Table.tsx","components/DataTable.tsx","App.tsx","index.tsx"],"names":["AppContainer","styled","div","ContentBox","Styles","FilterContainer","IndeterminateCheckbox","React","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","type","headerProps","props","column","getStyles","cellProps","cell","numeric","align","style","justifyContent","alignItems","display","Table","columns","data","onRowClick","onSelectionChange","onLoadMore","defaultColumn","useMemo","minWidth","width","maxWidth","useTable","useResizeColumns","useFlexLayout","useRowSelect","hooks","allColumns","push","id","disableResizing","Header","getToggleAllRowsSelectedProps","onClick","e","stopPropagation","Cell","row","getToggleRowSelectedProps","useInstanceBeforeDimensions","headerGroups","headers","canResize","getTableProps","rows","prepareRow","selectedRowIds","state","Object","keys","useState","initialLoad","setInitialLoad","el","document","querySelector","scrollTo","className","map","headerGroup","getHeaderGroupProps","getHeaderProps","render","getResizerProps","isResizing","getRowProps","preventDefault","rowData","values","rowIndex","index","cells","getCellProps","onEnter","onLeave","console","log","bottomOffset","DataTable","App","accessor","alt","title","src","thumbnailUrl","height","href","url","page","setPage","setRows","searchVal","setSearchVal","URL","params","_start","_limit","esc","encodeURIComponent","query","k","join","fetch","then","response","json","htmlFor","aria-label","placeholder","value","onChange","target","selection","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0c78c913.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const AppContainer = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  background: #fafafa;\r\n`;\r\n\r\nexport const ContentBox = styled.div`\r\n  width: 100%;\r\n  margin: 20px 40px;\r\n`;\r\n\r\nexport const PaddingBox = styled.div`\r\n  padding: 40px;\r\n`;\r\n\r\nexport const Styles = styled.div`\r\n  padding: 1rem;\r\n  display: block;\r\n  overflow: auto;\r\n\r\n  .table {\r\n    border-spacing: 0;\r\n    background: white;\r\n    border: 1px solid #f2f2f2;\r\n    box-shadow: 0 10px 20px rgba(133, 143, 175, 0.1);\r\n    border-radius: 4px;\r\n\r\n    .thead {\r\n      overflow-y: auto;\r\n      overflow-x: hidden;\r\n    }\r\n\r\n    .tbody {\r\n      overflow-y: scroll;\r\n      overflow-x: hidden;\r\n      height: 500px;\r\n    }\r\n\r\n    .tr {\r\n      :last-child {\r\n        .td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n      border-bottom: 1px solid #f2f2f2;\r\n    }\r\n\r\n    .th,\r\n    .td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      // border-right: 1px solid #f2f2f2;\r\n\r\n      position: relative;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n\r\n      .resizer {\r\n        right: 14px !important;\r\n        background: #f2f2f2;\r\n        width: 1px;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        z-index: 1;\r\n        touch-action: none;\r\n        &.isResizing {\r\n          background: red;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FilterContainer = styled.div`\r\n  padding: 18px;\r\n  margin: 20px 10px;\r\n  border-spacing: 0;\r\n  background: white;\r\n  border: 1px solid #f2f2f2;\r\n  box-shadow: 0 10px 20px rgba(133, 143, 175, 0.1);\r\n  border-radius: 4px;\r\n\r\n  input {\r\n    margin: 0 30px;\r\n    border:  1px solid #f2f2f2;\r\n    height: 30px;\r\n\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nexport const IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }: any, ref) => {\r\n    const defaultRef = React.useRef();\r\n    const resolvedRef: any = ref || defaultRef;\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    );\r\n  }\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useFlexLayout,\r\n  useResizeColumns,\r\n  useRowSelect,\r\n  useTable\r\n} from \"react-table\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { IndeterminateCheckbox } from \"./checkbox\";\r\nimport { PaddingBox } from \"./presentational\";\r\n\r\n// ===================================\r\n// Setup for \"numeric\" data alignment\r\n// ===================================\r\n\r\n// setting it up so only values change direction, not headings\r\n\r\nconst headerProps = (props: any, { column }: any) => getStyles(props, null);\r\n\r\nconst cellProps = (props: any, { cell }: any) =>\r\n  getStyles(props, cell.column.numeric);\r\n\r\nconst getStyles = (props: any, align: any = false) => [\r\n  props,\r\n  {\r\n    style: {\r\n      justifyContent: align ? \"flex-end\" : \"flex-start\",\r\n      alignItems: \"flex-start\",\r\n      display: \"flex\"\r\n    }\r\n  }\r\n];\r\n\r\nexport function Table({\r\n  columns,\r\n  data,\r\n  onRowClick,\r\n  onSelectionChange,\r\n  onLoadMore\r\n}: any) {\r\n  // ===================================\r\n  // Setup for column sizing defaults\r\n  // ===================================\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      minWidth: 50,\r\n      width: 150,\r\n      maxWidth: 300\r\n    }),\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state: { selectedRowIds }\r\n  }: any = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn\r\n    } as any,\r\n    useResizeColumns,\r\n    useFlexLayout,\r\n    useRowSelect,\r\n    hooks => {\r\n      hooks.allColumns.push(columns => [\r\n        {\r\n          id: \"selection\",\r\n          disableResizing: true,\r\n          minWidth: 50,\r\n          width: 50,\r\n          maxWidth: 50,\r\n          Header: ({ getToggleAllRowsSelectedProps }: any) => (\r\n            <div onClick={e => e.stopPropagation()}>\r\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n            </div>\r\n          ),\r\n          Cell: ({ row }: any) => (\r\n            <div onClick={e => e.stopPropagation()}>\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n            </div>\r\n          )\r\n        },\r\n        ...columns\r\n      ]);\r\n      hooks.useInstanceBeforeDimensions.push(({ headerGroups }: any) => {\r\n        const selectionGroupHeader = headerGroups[0].headers[0];\r\n        selectionGroupHeader.canResize = false;\r\n      });\r\n    }\r\n  ) as any;\r\n\r\n  // ===================================\r\n  // Setup for checkbox handler\r\n  // ===================================\r\n\r\n  useEffect(() => {\r\n    onSelectionChange(Object.keys(selectedRowIds));\r\n  }, [selectedRowIds, onSelectionChange]);\r\n\r\n  // ===================================\r\n  // Setup for infinite scroll\r\n  // ===================================\r\n\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n\r\n  const InfiniteScrollLoadDataFunction = () => {\r\n    // stop run on initial render\r\n    if (initialLoad) {\r\n      setInitialLoad(false);\r\n      return;\r\n    }\r\n\r\n    onLoadMore()\r\n  };\r\n  const InfiniteScrollLoadDataEnd = () => {\r\n    // note: could show/hide the loading indicator with this but it'll be buried in items anyway\r\n    // note: could setup custom loader using this\r\n    console.log(`calling InfiniteScrollLoadDataEnd`);\r\n  };\r\n\r\n  // ===================================\r\n  // Resetting scroll position on reload\r\n  // ===================================\r\n\r\n  useEffect(() => {\r\n    let el = document.querySelector(\".tbody\");\r\n    if (el && el.scrollTo) {\r\n      el.scrollTo(0, 0);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div {...getTableProps()} className=\"table\">\r\n        <div>\r\n          {headerGroups.map((headerGroup: any) => (\r\n            <div {...headerGroup.getHeaderGroupProps({})} className=\"tr\">\r\n              {headerGroup.headers.map((column: any) => (\r\n                <div {...column.getHeaderProps(headerProps)} className=\"th\">\r\n                  {column.render(\"Header\")}\r\n                  {column.canResize && (\r\n                    <div\r\n                      {...column.getResizerProps()}\r\n                      className={`resizer ${\r\n                        column.isResizing ? \"isResizing\" : \"\"\r\n                      }`}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"tbody\">\r\n          {rows.map((row: any) => {\r\n            prepareRow(row);\r\n            return (\r\n              <div\r\n                {...row.getRowProps()}\r\n                className=\"tr\"\r\n                onClick={(e: React.MouseEvent) => {\r\n                  e.preventDefault();\r\n                  onRowClick({ rowData: row.values, rowIndex: row.index });\r\n                }}\r\n              >\r\n                {row.cells.map((cell: any) => {\r\n                  return (\r\n                    <div {...cell.getCellProps(cellProps)} className=\"td\">\r\n                      {cell.render(\"Cell\")}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n          <Waypoint\r\n            onEnter={InfiniteScrollLoadDataFunction}\r\n            onLeave={InfiniteScrollLoadDataEnd}\r\n            bottomOffset=\"-50px\"\r\n          >\r\n          </Waypoint>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Styles } from \"./presentational\";\r\nimport { Table } from './Table';\r\n\r\n\r\nfunction DataTable({\r\n  rows,\r\n  columns,\r\n  onRowClick,\r\n  onSelectionChange,\r\n  onLoadMore\r\n}: any) {\r\n  return (\r\n    <Styles>\r\n      <Table\r\n        columns={columns}\r\n        data={rows}\r\n        onRowClick={onRowClick}\r\n        onSelectionChange={onSelectionChange}\r\n        onLoadMore={onLoadMore}\r\n      />\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DataTable from \"./components/DataTable\";\r\nimport {\r\n  AppContainer,\r\n  ContentBox,\r\n  FilterContainer\r\n} from \"./components/presentational\";\r\n\r\nexport interface APIPhoto {\r\n  albumId: number;\r\n  id: number;\r\n  title: string;\r\n  url: string;\r\n  thumbnailUrl: string;\r\n}\r\n\r\nfunction App() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Thumbnail\",\r\n        accessor: \"thumbnailUrl\",\r\n        Cell: ({ row }: any) => (\r\n          <img\r\n            alt={row.values.title}\r\n            src={row.values.thumbnailUrl}\r\n            height=\"60px\"\r\n          />\r\n        ),\r\n        width: 50\r\n      },\r\n      {\r\n        Header: \"Title\",\r\n        accessor: \"title\",\r\n        Cell: ({ row }: any) => <a href={row.values.url}>{row.values.title}</a>\r\n      },\r\n      {\r\n        Header: \"Url\",\r\n        accessor: \"url\"\r\n      },\r\n      {\r\n        Header: \"Album ID\",\r\n        accessor: \"albumId\",\r\n        numeric: false\r\n      },\r\n      {\r\n        Header: \"ID\",\r\n        accessor: \"id\",\r\n        numeric: true\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const onRowClick = ({ rowData, rowIndex }: any) => {\r\n    console.log({ rowData, rowIndex });\r\n  };\r\n\r\n  const onSelectionChange = (selection: string[]) => {\r\n    console.log({ selection });\r\n  };\r\n\r\n  // ==============================\r\n  // Paginated data fetching\r\n  // ==============================\r\n\r\n  const [page, setPage] = useState(0);\r\n  const pagLimit = 30;\r\n\r\n  const [rows, setRows] = useState<APIPhoto[]>([]);\r\n\r\n  const onLoadMore = () => {\r\n    if (!searchVal) setPage(page => page + 1);\r\n  };\r\n\r\n  const [searchVal, setSearchVal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let url = new URL(\"https://jsonplaceholder.typicode.com/photos\") as any;\r\n    let params = {\r\n      _start: page * pagLimit,\r\n      _limit: pagLimit\r\n    } as any;\r\n\r\n    if (searchVal) {\r\n      params[\"title\"] = searchVal;\r\n    }\r\n\r\n    var esc = encodeURIComponent;\r\n    var query = Object.keys(params)\r\n      .map(k => esc(k) + \"=\" + esc(params[k]))\r\n      .join(\"&\");\r\n\r\n    console.log(url, query);\r\n\r\n    fetch(url.href + \"?\" + query)\r\n      .then(response => response.json())\r\n      .then((json: APIPhoto[]) => {\r\n        console.log(json);\r\n        if (searchVal || page === 0) {\r\n          setRows(rows => [...json]);\r\n        } else {\r\n          setRows(rows => [...rows, ...json]);\r\n        }\r\n      });\r\n  }, [page, searchVal]);\r\n\r\n  return (\r\n    <AppContainer>\r\n      <ContentBox>\r\n        <h1>DataTable Component: </h1>\r\n        <FilterContainer>\r\n          <label htmlFor=\"Filter\">Filter</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            aria-label=\"Filter\"\r\n            placeholder=\"Enter search text...\"\r\n            value={searchVal}\r\n            onChange={e => {\r\n              e.preventDefault();\r\n              setSearchVal(e.target.value);\r\n            }}\r\n          />\r\n        </FilterContainer>\r\n        <DataTable\r\n          columns={columns}\r\n          rows={rows}\r\n          onRowClick={onRowClick}\r\n          onSelectionChange={onSelectionChange}\r\n          onLoadMore={onLoadMore}\r\n        />\r\n      </ContentBox>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './globalStyles.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}